// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.server_url = 'https://radiocollarapp.herokuapp.com/api/v1';

  $(function() {
    var _ref, _ref1, _ref2, _ref3;
    window.Place = (function(_super) {
      var _ref1, _ref2;

      __extends(Place, _super);

      function Place() {
        _ref = Place.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Place.prototype.idAttribute = "_id";

      Place.prototype.initialize = function(params) {
        return this.set({
          title: params.title,
          lat: params.lat,
          lng: params.lng
        });
      };

      Place.prototype.validate = function(attrs, optns) {
        if (!this.title || !this.lat || !this.lng) {
          return "Must have a title and coordinates";
        }
      };

      Place.prototype.urlRoot = server_url + "/places";

      window.PlaceList = (function(_super1) {
        __extends(PlaceList, _super1);

        function PlaceList() {
          _ref1 = PlaceList.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        PlaceList.prototype.model = Place;

        PlaceList.prototype.url = server_url + "/places";

        return PlaceList;

      })(Backbone.Collection);

      window.PlaceView = (function(_super1) {
        __extends(PlaceView, _super1);

        function PlaceView() {
          this.createPlace = __bind(this.createPlace, this);
          _ref2 = PlaceView.__super__.constructor.apply(this, arguments);
          return _ref2;
        }

        PlaceView.prototype.el = $('#content');

        PlaceView.prototype.initialize = function() {
          this.model.bind('change', this.render);
          return this.model.view = this;
        };

        PlaceView.prototype.events = {
          "click #send": "createPlace"
        };

        PlaceView.prototype.createPlace = function() {
          alert('do something here...');
          return this;
        };

        return PlaceView;

      })(Backbone.View);

      return Place;

    }).call(this, Backbone.Model);
    window.Place = (function(_super) {
      __extends(Place, _super);

      function Place() {
        _ref1 = Place.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      Place.prototype.idAttribute = "_id";

      Place.prototype.initialize = function(params) {
        return this.set({
          title: params.title
        });
      };

      Place.prototype.validate = function(attrs, optns) {
        if (!this.title) {
          return "Title is required";
        } else if (!this.lat) {
          return "Latitude is required";
        } else if (!this.lng) {
          return "Longitude is required";
        }
      };

      Place.prototype.urlRoot = server_url + "/places";

      return Place;

    })(Backbone.Model);
    window.Places = (function(_super) {
      __extends(Places, _super);

      function Places() {
        _ref2 = Places.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      Places.prototype.model = Place;

      return Places;

    })(Backbone.Collection);
    return window.PlaceNewView = (function(_super) {
      __extends(PlaceNewView, _super);

      function PlaceNewView() {
        this.render = __bind(this.render, this);
        _ref3 = PlaceNewView.__super__.constructor.apply(this, arguments);
        return _ref3;
      }

      PlaceNewView.prototype.el = $('#content');

      PlaceNewView.prototype.initialize = function() {
        return this.template = null;
      };

      PlaceNewView.prototype.events = {
        "click #send": "createPlace"
      };

      PlaceNewView.prototype.clear = function() {
        return this.model.destroy();
      };

      PlaceNewView.prototype.edit = function() {
        var oldTitle;
        return oldTitle = this.model.get("title");
      };

      PlaceNewView.prototype.createPlace = function(e) {
        return this.model.save();
      };

      PlaceNewView.prototype.render = function() {
        $(this.el).html(this.template);
        return this;
      };

      return PlaceNewView;

    })(Backbone.View);
  });

}).call(this);

/*
//@ sourceMappingURL=app_snippets.map
*/
